#version 450
uniform vec4 _Time;
uniform float _OneMinusGlobalMainIntensity;
uniform float _ES_EP_EffectParticleTop;
uniform float _ES_EP_EffectParticleBottom;
uniform float _ES_EP_EffectParticle;
uniform float _ES_EffectIntensityScale;
uniform float _GlobalOneMinusAvatarIntensity;
uniform float _GlobalOneMinusAvatarIntensityEnable;
uniform float _OneMinusGlobalMainIntensityEnable;
uniform vec4 _Cloud01Color;
uniform vec4 _CloudTex01UV1Coord;
uniform vec4 _CloudTex01UV2Coord;
uniform float _GradientRange;
uniform float _GradientOffset;
uniform float _CloudOffset;
uniform float _CloudMultiplyer;
uniform vec4 _Cloud02Color;
uniform vec4 _CloudTex02UV1Coord;
uniform vec4 _CloudTex02UV2Coord;
uniform float _Cloud02Offset;
uniform float _Cloud02Multipler;
uniform vec4 _ColorPalette_ST;
uniform float _ColorPalletteSpeed;
uniform float _AllCloudsAlpha;
uniform float _PerlinNoiseScale;
uniform float _PerlinNoiseOffset;
uniform float _PerlinNoiseMultiply;
uniform vec3 _PerlinNoisePosOffset;
uniform float _Desaturate;
uniform float _NoiseSpeed;
uniform vec4 _TintColorTexUV2Coord;
uniform vec4 _TintColorTexUV1Coord;
uniform float _TintColorTexScale;
uniform vec4 _StarTexUV1Coord;
uniform float _StarDepth;
uniform vec4 _StarTexUV2Coord;
uniform vec4 _StarNoiseTiling;
uniform float _StarScintillationSpeed;
uniform float _StarBrightness1;
uniform float _StarBrightness2;
uniform float _FlowSpeed;
uniform float _FlowStrength;
layout(location = 0) uniform sampler2D _Cloud01Tex;
layout(location = 1) uniform sampler2D _Cloud02Tex;
layout(location = 2) uniform sampler2D _ColorPalette;
layout(location = 3) uniform sampler2D _TintColorTex;
layout(location = 4) uniform sampler2D _StarTex;
layout(location = 5) uniform sampler2D _FlowTex;
in vec4 vs_TEXCOORD0;
in vec4 vs_TEXCOORD1;
in vec4 vs_TEXCOORD2;
in vec3 vs_TEXCOORD4;
in vec3 vs_TEXCOORD6;
in vec3 vs_TEXCOORD7;
layout(location = 0) out vec4 SV_Target0;
vec4 u_xlat0;
vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat16_1;
vec4 u_xlat2;
vec3 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat16_7;
vec2 u_xlat8;
float u_xlat16_8;
vec2 u_xlat9;
vec2 u_xlat16_9;
vec3 u_xlat16_13;
vec2 u_xlat14;
float u_xlat16_14;
vec2 u_xlat15;
float u_xlat16_15;
bool u_xlatb15;
float u_xlat21;
float u_xlat16_21;
float u_xlat22;
float u_xlat16_22;
float u_xlat16_27;
void main(){
    vec3 debugColor = vec3(1.0, 0.0, 0.0);

//noise------------------------------------------
//vs_TEXCOORD7 = positionWS
  (u_xlat0 = (vs_TEXCOORD7.xyxz + _PerlinNoisePosOffset.xyxz));
  (u_xlat1 = (u_xlat0 * vec4(_PerlinNoiseScale)));
  (u_xlat1 = floor(u_xlat1));
  (u_xlat2 = (u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0)));
  (u_xlat2.z = dot(u_xlat2.zw, vec2(127.1, 311.70001)));
  (u_xlat2.x = dot(u_xlat2.xy, vec2(127.1, 311.70001)));
  (u_xlat2.xy = sin(u_xlat2.xz));
  (u_xlat2.xy = (u_xlat2.xy * vec2(43758.547, 43758.547)));
  (u_xlat2.xy = fract(u_xlat2.xy));
  (u_xlat2.x = ((u_xlat2.x * 2.0) + -1.0));
  (u_xlat9.x = ((u_xlat2.y * 2.0) + -1.0));
  (u_xlat3 = ((u_xlat0 * vec4(_PerlinNoiseScale)) + (-u_xlat1)));
  (u_xlat4 = (u_xlat3.zwzw + vec4(-0.0, -1.0, -1.0, -1.0)));
  (u_xlat0.x = dot(u_xlat9.xx, u_xlat4.zw));
  (u_xlat14.x = dot(u_xlat2.xx, u_xlat4.xy));
  (u_xlat0.x = ((-u_xlat14.x) + u_xlat0.x));
  (u_xlat2 = (u_xlat3 * u_xlat3));
  (u_xlat4 = (((-u_xlat3) * vec4(2.0, 2.0, 2.0, 2.0)) + vec4(3.0, 3.0, 3.0, 3.0)));
  (u_xlat2 = (u_xlat2 * u_xlat4));
  (u_xlat0.x = ((u_xlat2.z * u_xlat0.x) + u_xlat14.x));
  (u_xlat4 = (u_xlat1 + vec4(1.0, 1.0, 1.0, 0.0)));
  (u_xlat14.x = dot(u_xlat4.zw, vec2(127.1, 311.70001)));
  (u_xlat4.x = dot(u_xlat4.xy, vec2(127.1, 311.70001)));
  (u_xlat4.x = sin(u_xlat4.x));
  (u_xlat4.x = (u_xlat4.x * 43758.547));
  (u_xlat4.x = fract(u_xlat4.x));
  (u_xlat4.x = ((u_xlat4.x * 2.0) + -1.0));
  (u_xlat14.x = sin(u_xlat14.x));
  (u_xlat14.x = (u_xlat14.x * 43758.547));
  (u_xlat14.x = fract(u_xlat14.x));
  (u_xlat14.x = ((u_xlat14.x * 2.0) + -1.0));

  (u_xlat5 = (u_xlat3 + vec4(-1.0, -1.0, -1.0, -0.0)));
  (u_xlat14.x = dot(u_xlat14.xx, u_xlat5.zw));
  (u_xlat4.x = dot(u_xlat4.xx, u_xlat5.xy));
  (u_xlat15.x = dot(u_xlat1.zw, vec2(127.1, 311.70001)));
  (u_xlat15.x = sin(u_xlat15.x));
  (u_xlat15.x = (u_xlat15.x * 43758.547));
  (u_xlat15.x = fract(u_xlat15.x));
  (u_xlat15.x = ((u_xlat15.x * 2.0) + -1.0));
  (u_xlat15.x = dot(u_xlat15.xx, u_xlat3.zw));
  (u_xlat14.x = (u_xlat14.x + (-u_xlat15.x)));
  (u_xlat14.x = ((u_xlat2.z * u_xlat14.x) + u_xlat15.x));
  (u_xlat0.x = ((-u_xlat14.x) + u_xlat0.x));
  (u_xlat0.x = ((u_xlat2.w * u_xlat0.x) + u_xlat14.x));
//vs_TEXCOORD6 = normalWS
  (u_xlat0.x = (u_xlat0.x * abs(vs_TEXCOORD6.y)));
  (u_xlat14.x = dot(u_xlat1.xy, vec2(127.1, 311.70001)));
  (u_xlat1 = (u_xlat1.xyxy + vec4(1.0, 0.0, 0.0, 1.0)));
  (u_xlat14.x = sin(u_xlat14.x));
  (u_xlat14.x = (u_xlat14.x * 43758.547));
  (u_xlat14.x = fract(u_xlat14.x));
  (u_xlat14.x = ((u_xlat14.x * 2.0) + -1.0));
  (u_xlat14.x = dot(u_xlat14.xx, u_xlat3.xy));
  (u_xlat3 = (u_xlat3.xyxy + vec4(-1.0, -0.0, -0.0, -1.0)));
  (u_xlat1.x = dot(u_xlat1.xy, vec2(127.1, 311.70001)));
  (u_xlat1.y = dot(u_xlat1.zw, vec2(127.1, 311.70001)));
  (u_xlat1.xy = sin(u_xlat1.xy));
  (u_xlat1.xy = (u_xlat1.xy * vec2(43758.547, 43758.547)));
  (u_xlat1.xy = fract(u_xlat1.xy));
  (u_xlat8.x = ((u_xlat1.y * 2.0) + -1.0));
  (u_xlat8.x = dot(u_xlat8.xx, u_xlat3.zw));
  (u_xlat1.x = ((u_xlat1.x * 2.0) + -1.0));
  (u_xlat1.x = dot(u_xlat1.xx, u_xlat3.xy));
  (u_xlat1.x = ((-u_xlat14.x) + u_xlat1.x));
  (u_xlat14.x = ((u_xlat2.x * u_xlat1.x) + u_xlat14.x));
  (u_xlat1.x = ((-u_xlat8.x) + u_xlat4.x));
  (u_xlat1.x = ((u_xlat2.x * u_xlat1.x) + u_xlat8.x));
  (u_xlat1.x = ((-u_xlat14.x) + u_xlat1.x));
  (u_xlat14.x = ((u_xlat2.y * u_xlat1.x) + u_xlat14.x));
  (u_xlat0.x = ((u_xlat14.x * abs(vs_TEXCOORD6.z)) + u_xlat0.x));
  (u_xlat1.xy = (u_xlat0.yw * vec2(_PerlinNoiseScale)));
  (u_xlat1.xy = floor(u_xlat1.xy));
  (u_xlat15.xy = (u_xlat1.xy + vec2(1.0, 1.0)));
  (u_xlat14.x = dot(u_xlat15.xy, vec2(127.1, 311.70001)));
  (u_xlat14.x = sin(u_xlat14.x));
  (u_xlat14.x = (u_xlat14.x * 43758.547));
  (u_xlat14.x = fract(u_xlat14.x));
  (u_xlat14.x = ((u_xlat14.x * 2.0) + -1.0));
  (u_xlat7.xz = ((u_xlat0.yw * vec2(_PerlinNoiseScale)) + (-u_xlat1.xy)));
  (u_xlat15.xy = (u_xlat7.xz + vec2(-1.0, -1.0)));
  (u_xlat14.x = dot(u_xlat14.xx, u_xlat15.xy));
  (u_xlat2 = (u_xlat1.xyxy + vec4(1.0, 0.0, 0.0, 1.0)));
  (u_xlat1.x = dot(u_xlat1.xy, vec2(127.1, 311.70001)));
  (u_xlat1.x = sin(u_xlat1.x));
  (u_xlat1.x = (u_xlat1.x * 43758.547));
  (u_xlat1.x = fract(u_xlat1.x));
  (u_xlat1.x = ((u_xlat1.x * 2.0) + -1.0));
  (u_xlat1.x = dot(u_xlat1.xx, u_xlat7.xz));
  (u_xlat8.x = dot(u_xlat2.zw, vec2(127.1, 311.70001)));
  (u_xlat8.y = dot(u_xlat2.xy, vec2(127.1, 311.70001)));
  (u_xlat8.xy = sin(u_xlat8.xy));
  (u_xlat8.xy = (u_xlat8.xy * vec2(43758.547, 43758.547)));
  (u_xlat8.xy = fract(u_xlat8.xy));
  (u_xlat15.x = ((u_xlat8.y * 2.0) + -1.0));
  (u_xlat8.x = ((u_xlat8.x * 2.0) + -1.0));
  (u_xlat2 = (u_xlat7.xzxz + vec4(-1.0, -0.0, -0.0, -1.0)));
  (u_xlat8.x = dot(u_xlat8.xx, u_xlat2.zw));
  (u_xlat15.x = dot(u_xlat15.xx, u_xlat2.xy));
  (u_xlat15.x = ((-u_xlat1.x) + u_xlat15.x));
  (u_xlat14.x = (u_xlat14.x + (-u_xlat8.x)));
  (u_xlat2.xy = (u_xlat7.xz * u_xlat7.xz));
  (u_xlat7.xz = (((-u_xlat7.xz) * vec2(2.0, 2.0)) + vec2(3.0, 3.0)));
  (u_xlat7.xz = (u_xlat7.xz * u_xlat2.xy));
  (u_xlat14.x = ((u_xlat7.x * u_xlat14.x) + u_xlat8.x));
  (u_xlat7.x = ((u_xlat7.x * u_xlat15.x) + u_xlat1.x));
  (u_xlat14.x = ((-u_xlat7.x) + u_xlat14.x));
  (u_xlat7.x = ((u_xlat7.z * u_xlat14.x) + u_xlat7.x));
  (u_xlat0.x = ((u_xlat7.x * abs(vs_TEXCOORD6.x)) + u_xlat0.x));
  (u_xlat0.x = (u_xlat0.x * _PerlinNoiseMultiply));
  (u_xlat0.x = ((u_xlat0.x * 0.5) + _PerlinNoiseOffset));
  (u_xlat0.x = (u_xlat0.x + 0.5));
  (u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0));
//-----------------------------------------------------------------

// debugColor = vs_TEXCOORD7.xyz ;

//  vs_TEXCOORD0=uv;
//  vs_TEXCOORD1=uv1;
//  vs_TEXCOORD2=uv2;
//  vs_TEXCOORD4=tangentWS;
//  vs_TEXCOORD6=normalWS;
//  vs_TEXCOORD7=positionWS;

  (u_xlat7.x = ((_Time.y * _FlowSpeed) + 0.5));
  (u_xlat7.x = fract(u_xlat7.x));
  (u_xlat7.x = (u_xlat7.x * _FlowStrength));

  (u_xlat14.xy = ((vs_TEXCOORD1.xy * _CloudTex02UV2Coord.xy) + _CloudTex02UV2Coord.zw));
  (u_xlat16_1.xy = texture(_FlowTex, u_xlat14.xy).xy);
  (u_xlat1.xy = ((u_xlat16_1.xy * vec2(2.0, 2.0)) + vec2(-1.0, -1.0)));
  (u_xlat15.xy = ((u_xlat1.xy * u_xlat7.xx) + u_xlat14.xy));
  (u_xlat16_15 = texture(_Cloud02Tex, u_xlat15.xy).x);

  (u_xlat22 = (_Time.y * _FlowSpeed));
  (u_xlat22 = fract(u_xlat22));
  (u_xlat2.x = (u_xlat22 * _FlowStrength));
  (u_xlat22 = ((u_xlat22 * 2.0) + -1.0));
  (u_xlat14.xy = ((u_xlat1.xy * u_xlat2.xx) + u_xlat14.xy));
  (u_xlat16_14 = texture(_Cloud02Tex, u_xlat14.xy).x);
  (u_xlat21 = ((-u_xlat16_14) + u_xlat16_15));
  (u_xlat14.x = ((abs(u_xlat22) * u_xlat21) + u_xlat16_14));
  (u_xlat1.xy = ((vs_TEXCOORD0.xy * _CloudTex02UV1Coord.xy) + _CloudTex02UV1Coord.zw));
  (u_xlat16_9.xy = texture(_FlowTex, u_xlat1.xy).xy);
  (u_xlat9.xy = ((u_xlat16_9.xy * vec2(2.0, 2.0)) + vec2(-1.0, -1.0)));
  (u_xlat3.xy = ((u_xlat9.xy * u_xlat7.xx) + u_xlat1.xy));
  (u_xlat1.xy = ((u_xlat9.xy * u_xlat2.xx) + u_xlat1.xy));
  (u_xlat16_21 = texture(_Cloud02Tex, u_xlat1.xy).x);
  (u_xlat16_1.x = texture(_Cloud02Tex, u_xlat3.xy).x);
  (u_xlat1.x = ((-u_xlat16_21) + u_xlat16_1.x));
  (u_xlat21 = ((abs(u_xlat22) * u_xlat1.x) + u_xlat16_21));
  (u_xlat16_6.x = ((-u_xlat21) + u_xlat14.x));
  (u_xlat14.x = (_GradientOffset + _GradientRange));
  (u_xlat14.x = ((vs_TEXCOORD0.y * (-_GradientRange)) + u_xlat14.x));
  (u_xlat14.x = clamp(u_xlat14.x, 0.0, 1.0));
  (u_xlat1.x = ((vs_TEXCOORD0.y * _GradientRange) + _GradientOffset));
  (u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0));
  (u_xlat16_13.x = (u_xlat14.x + (-u_xlat1.x)));
  (u_xlat16_13.x = ((u_xlat14.x * u_xlat16_13.x) + u_xlat1.x));
  (u_xlat16_6.x = ((u_xlat16_13.x * u_xlat16_6.x) + u_xlat21));
  (u_xlat14.x = (u_xlat16_6.x + _Cloud02Offset));
  (u_xlat14.x = (u_xlat14.x * _Cloud02Multipler));
  (u_xlat14.x = max(u_xlat14.x, 0.0));
  (u_xlat14.x = min(u_xlat14.x, 2.0));
  (u_xlat1.xy = ((vs_TEXCOORD1.xy * _CloudTex01UV2Coord.xy) + _CloudTex01UV2Coord.zw));
  (u_xlat16_9.xy = texture(_FlowTex, u_xlat1.xy).xy);
  (u_xlat9.xy = ((u_xlat16_9.xy * vec2(2.0, 2.0)) + vec2(-1.0, -1.0)));
  (u_xlat3.xy = ((u_xlat9.xy * u_xlat7.xx) + u_xlat1.xy));
  (u_xlat1.xy = ((u_xlat9.xy * u_xlat2.xx) + u_xlat1.xy));
  (u_xlat16_21 = texture(_Cloud01Tex, u_xlat1.xy).x);
  (u_xlat16_1.x = texture(_Cloud01Tex, u_xlat3.xy).x);
  (u_xlat1.x = ((-u_xlat16_21) + u_xlat16_1.x));
  (u_xlat21 = ((abs(u_xlat22) * u_xlat1.x) + u_xlat16_21));
  (u_xlat1.xy = ((vs_TEXCOORD0.xy * _CloudTex01UV1Coord.xy) + _CloudTex01UV1Coord.zw));
  (u_xlat16_9.xy = texture(_FlowTex, u_xlat1.xy).xy);
  (u_xlat9.xy = ((u_xlat16_9.xy * vec2(2.0, 2.0)) + vec2(-1.0, -1.0)));
  (u_xlat3.xy = ((u_xlat9.xy * u_xlat7.xx) + u_xlat1.xy));
  (u_xlat1.xy = ((u_xlat9.xy * u_xlat2.xx) + u_xlat1.xy));
  (u_xlat16_7 = texture(_Cloud01Tex, u_xlat1.xy).x);
  (u_xlat16_1.x = texture(_Cloud01Tex, u_xlat3.xy).x);
  (u_xlat1.x = ((-u_xlat16_7) + u_xlat16_1.x));
  (u_xlat7.x = ((abs(u_xlat22) * u_xlat1.x) + u_xlat16_7));
  (u_xlat16_6.x = ((-u_xlat7.x) + u_xlat21));
  (u_xlat16_6.x = ((u_xlat16_13.x * u_xlat16_6.x) + u_xlat7.x));
  (u_xlat7.x = (u_xlat16_6.x + _CloudOffset));
  (u_xlat7.x = (u_xlat7.x * _CloudMultiplyer));
  (u_xlat7.x = max(u_xlat7.x, 0.0));
  (u_xlat7.x = min(u_xlat7.x, 2.0));
  (u_xlat1 = (u_xlat7.xxxx * _Cloud01Color));
  (u_xlat2 = ((u_xlat14.xxxx * _Cloud02Color) + (-u_xlat1)));
  (u_xlat0 = ((u_xlat0.xxxx * u_xlat2) + u_xlat1));

// ================================  ================================


  (u_xlat1.xy = ((vs_TEXCOORD1.xy * _TintColorTexUV2Coord.xy) + _TintColorTexUV2Coord.zw));
  (u_xlat1.z = ((_Time.y * _NoiseSpeed) + u_xlat1.y));
  (u_xlat16_1.xyz = texture(_TintColorTex, u_xlat1.xz).xyz);
  (u_xlat2.xy = ((vs_TEXCOORD0.xy * _TintColorTexUV1Coord.xy) + _TintColorTexUV1Coord.zw));
  (u_xlat2.z = ((_Time.y * _NoiseSpeed) + u_xlat2.y));
  (u_xlat16_2.xyz = texture(_TintColorTex, u_xlat2.xz).xyz);
  (u_xlat1.xyz = (u_xlat16_1.xyz + (-u_xlat16_2.xyz)));
  (u_xlat1.xyz = ((u_xlat16_13.xxx * u_xlat1.xyz) + u_xlat16_2.xyz));
  (u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0));
  (u_xlat22 = dot(u_xlat1.xyz, vec3(0.29899999, 0.58700001, 0.114)));
  (u_xlat1.xyz = ((-vec3(u_xlat22)) + u_xlat1.xyz));
  (u_xlat1.xyz = ((vec3(_TintColorTexScale) * u_xlat1.xyz) + vec3(u_xlat22)));
  (u_xlat0.xyz = (u_xlat0.xyz * u_xlat1.xyz));
  (u_xlat16_0 = (u_xlat0 * vec4(_AllCloudsAlpha)));
  (u_xlat1.x = dot(u_xlat16_0.xyz, vec3(0.29899999, 0.58700001, 0.114)));
  (u_xlat16_6.x = (u_xlat1.x + -0.039999999));
  (u_xlat16_6.x = (u_xlat16_6.x * 10.0));
  (u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0));
  (u_xlat1.xy = ((vs_TEXCOORD1.xy * _StarTexUV2Coord.xy) + _StarTexUV2Coord.zw));
  (u_xlat15.xy = (vs_TEXCOORD4.xy * vec2(_StarDepth)));
// debugColor.xyz = vs_TEXCOORD7.xyz ;

  (u_xlat2.xy = ((u_xlat1.xy * vec2(0.40000001, 0.40000001)) + u_xlat15.xy));
  (u_xlat16_1.x = texture(_StarTex, u_xlat1.xy).x);
  (u_xlat16_8 = texture(_StarTex, u_xlat2.xy).y);
  (u_xlat2.xy = ((vs_TEXCOORD0.xy * _StarTexUV1Coord.xy) + _StarTexUV1Coord.zw));
  (u_xlat15.xy = ((u_xlat2.xy * vec2(0.40000001, 0.40000001)) + u_xlat15.xy));
  (u_xlat16_2.x = texture(_StarTex, u_xlat2.xy).x);
  (u_xlat16_15 = texture(_StarTex, u_xlat15.xy).y);
  (u_xlat8.x = ((-u_xlat16_15) + u_xlat16_8));
  (u_xlat1.y = ((u_xlat16_13.x * u_xlat8.x) + u_xlat16_15));
  (u_xlat1.x = (u_xlat16_1.x + (-u_xlat16_2.x)));
  (u_xlat1.x = ((u_xlat16_13.x * u_xlat1.x) + u_xlat16_2.x));
  (u_xlat1.xy = (u_xlat1.xy * vec2(_StarBrightness1, _StarBrightness2)));
  (u_xlat1.x = ((u_xlat1.x * u_xlat16_6.x) + u_xlat1.y));
  (u_xlat8.xy = (vs_TEXCOORD2.xy * _StarNoiseTiling.xy));
  (u_xlat22 = (_Time.y * _StarScintillationSpeed));
  (u_xlat2 = (vec4(u_xlat22) * vec4(0.40000001, 0.2, 0.1, 0.5)));
  (u_xlat8.xy = ((u_xlat8.xy * vec2(2.0, 2.0)) + u_xlat2.zw));
  (u_xlat2.xy = ((vs_TEXCOORD2.xy * _StarNoiseTiling.xy) + u_xlat2.xy));
  (u_xlat16_22 = texture(_StarTex, u_xlat2.xy).z);
  (u_xlat16_8 = texture(_StarTex, u_xlat8.xy).z);
  (u_xlat8.x = (u_xlat16_8 * u_xlat16_22));
  (u_xlat16_6.x = (u_xlat8.x * 3.0));
  (u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0));
  (u_xlat16_6.x = (u_xlat1.x * u_xlat16_6.x));
  (u_xlat1.yz = ((vs_TEXCOORD1.xy * _ColorPalette_ST.xy) + _ColorPalette_ST.zw));
  (u_xlat1.x = ((_Time.y * _ColorPalletteSpeed) + u_xlat1.y));
  (u_xlat16_1.xyz = texture(_ColorPalette, u_xlat1.xz).xyz);
  (u_xlat2.yz = ((vs_TEXCOORD0.xy * _ColorPalette_ST.xy) + _ColorPalette_ST.zw));
  (u_xlat2.x = ((_Time.y * _ColorPalletteSpeed) + u_xlat2.y));
  (u_xlat16_2.xyz = texture(_ColorPalette, u_xlat2.xz).xyz);
  (u_xlat1.xyz = (u_xlat16_1.xyz + (-u_xlat16_2.xyz)));
  (u_xlat1.xyz = ((u_xlat16_13.xxx * u_xlat1.xyz) + u_xlat16_2.xyz));

debugColor = u_xlat16_2.xyz;

  (u_xlat16_13.xyz = ((-u_xlat1.xyz) + vec3(1.0, 1.0, 1.0)));
  (u_xlat16_13.xyz = ((vec3(_Desaturate) * u_xlat16_13.xyz) + u_xlat1.xyz));
  (u_xlat16_6.xyz = ((u_xlat16_6.xxx * u_xlat16_13.xyz) + u_xlat16_0.xyz));
  (SV_Target0.w = u_xlat16_0.w);
  (u_xlat16_27 = (((-_GlobalOneMinusAvatarIntensityEnable) * _GlobalOneMinusAvatarIntensity) + 1.0));
  (u_xlat16_6.xyz = (vec3(u_xlat16_27) * u_xlat16_6.xyz));
  (u_xlat16_27 = (((-_OneMinusGlobalMainIntensityEnable) * _OneMinusGlobalMainIntensity) + 1.0));
  (u_xlat16_6.xyz = (vec3(u_xlat16_27) * u_xlat16_6.xyz));
  (u_xlat16_6.xyz = (u_xlat16_6.xyz * vec3(vec3(_ES_EffectIntensityScale, _ES_EffectIntensityScale, _ES_EffectIntensityScale))));
  (u_xlat16_27 = max(u_xlat16_6.y, u_xlat16_6.x));
  (u_xlat16_27 = max(u_xlat16_6.z, u_xlat16_27));
  (u_xlat1.x = max(u_xlat16_27, 0.0099999998));
  (u_xlat8.x = (u_xlat1.x + (-_ES_EP_EffectParticleBottom)));
  (u_xlat15.x = ((-_ES_EP_EffectParticleBottom) + _ES_EP_EffectParticleTop));
  (u_xlat15.x = (1.0 / u_xlat15.x));
  (u_xlat8.x = (u_xlat15.x * u_xlat8.x));
  (u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0));
  (u_xlat15.x = ((u_xlat8.x * -2.0) + 3.0));
  (u_xlat8.x = (u_xlat8.x * u_xlat8.x));
  (u_xlat8.x = (u_xlat8.x * u_xlat15.x));
  (u_xlat16_27 = ((-_ES_EP_EffectParticleBottom) + _ES_EP_EffectParticleTop));
  (u_xlat16_27 = ((u_xlat8.x * u_xlat16_27) + _ES_EP_EffectParticleBottom));
  (u_xlat8.x = ((-u_xlat1.x) + u_xlat16_27));
  (u_xlat8.x = ((_ES_EP_EffectParticle * u_xlat8.x) + u_xlat1.x));
  (u_xlatb15 = (_ES_EP_EffectParticleBottom < u_xlat1.x));
  (u_xlat8.x = ((u_xlatb15) ? (u_xlat8.x) : (u_xlat1.x)));
// debugColor.rg = u_xlat1.yz;


  (u_xlat1.xzw = (u_xlat16_6.xyz / u_xlat1.xxx));
  (u_xlat1.xyz = (u_xlat8.xxx * u_xlat1.xzw));

  (SV_Target0.xyz = u_xlat1.xyz);
  SV_Target0.xyz = debugColor;
  return ;
}
